using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using Sofia.Web.Data;
using Sofia.Web.Models;

namespace Sofia.Web.Controllers;

[Route("companion")]
public class CompanionController : Controller
{
    private readonly SofiaDbContext _context;

    public CompanionController(SofiaDbContext context)
    {
        _context = context;
    }

    [HttpGet("")]
    public async Task<IActionResult> Index()
    {
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —ç–º–æ—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        var recentNotes = await _context.Notes
            .OrderByDescending(n => n.CreatedAt)
            .Take(5)
            .ToListAsync();

        var lastEmotion = recentNotes.FirstOrDefault()?.Emotion ?? EmotionType.Neutral;
        var petMood = GetPetMood(lastEmotion);
        var petMessage = GetPetMessage(lastEmotion, recentNotes.Count);

        ViewBag.PetMood = petMood;
        ViewBag.PetMessage = petMessage;
        ViewBag.LastEmotion = lastEmotion;
        ViewBag.RecentNotes = recentNotes;

        return View();
    }

    [HttpPost("feed")]
    public IActionResult Feed()
    {
        // –°–∏–º—É–ª—è—Ü–∏—è –∫–æ—Ä–º–ª–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞
        var happiness = Random.Shared.Next(70, 100);
        var message = GetFeedMessage(happiness);
        
        return Json(new { 
            success = true, 
            happiness = happiness,
            message = message,
            petMood = "happy"
        });
    }

    [HttpPost("play")]
    public IActionResult Play()
    {
        // –°–∏–º—É–ª—è—Ü–∏—è –∏–≥—Ä—ã —Å –ø–∏—Ç–æ–º—Ü–µ–º
        var energy = Random.Shared.Next(60, 90);
        var message = GetPlayMessage(energy);
        
        return Json(new { 
            success = true, 
            energy = energy,
            message = message,
            petMood = "excited"
        });
    }

    [HttpPost("comfort")]
    public IActionResult Comfort()
    {
        // –£—Ç–µ—à–µ–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞
        var comfort = Random.Shared.Next(80, 100);
        var message = GetComfortMessage(comfort);
        
        return Json(new { 
            success = true, 
            comfort = comfort,
            message = message,
            petMood = "calm"
        });
    }

    [HttpGet("status")]
    public async Task<IActionResult> GetStatus()
    {
        var recentNotes = await _context.Notes
            .OrderByDescending(n => n.CreatedAt)
            .Take(3)
            .ToListAsync();

        var lastEmotion = recentNotes.FirstOrDefault()?.Emotion ?? EmotionType.Neutral;
        var petMood = GetPetMood(lastEmotion);
        var petMessage = GetPetMessage(lastEmotion, recentNotes.Count);

        return Json(new {
            petMood = petMood,
            petMessage = petMessage,
            lastEmotion = lastEmotion.ToString(),
            notesCount = recentNotes.Count
        });
    }

    private string GetPetMood(EmotionType emotion)
    {
        return emotion switch
        {
            EmotionType.VerySad => "sad",
            EmotionType.Sad => "concerned",
            EmotionType.Neutral => "neutral",
            EmotionType.Happy => "happy",
            EmotionType.VeryHappy => "excited",
            EmotionType.Anxious => "worried",
            EmotionType.Calm => "peaceful",
            EmotionType.Excited => "energetic",
            EmotionType.Frustrated => "confused",
            EmotionType.Grateful => "loving",
            _ => "neutral"
        };
    }

    private string GetPetMessage(EmotionType emotion, int notesCount)
    {
        var messages = emotion switch
        {
            EmotionType.VerySad => new[] { 
                "üò¢ –Ø –≤–∏–∂—É, —á—Ç–æ —Ç–µ–±–µ –æ—á–µ–Ω—å –≥—Ä—É—Å—Ç–Ω–æ... –•–æ—á–µ—à—å –æ–±–Ω—è—Ç—å –º–µ–Ω—è?", 
                "üíô –¢—ã –Ω–µ –æ–¥–∏–Ω–æ–∫, —è –∑–¥–µ—Å—å —Å —Ç–æ–±–æ–π. –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?",
                "ü§ó –î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ –ø–µ—Ä–µ–∂–∏–≤–µ–º —ç—Ç–æ —Ç—Ä—É–¥–Ω–æ–µ –≤—Ä–µ–º—è. –Ø –ø–æ–¥–¥–µ—Ä–∂—É —Ç–µ–±—è!"
            },
            EmotionType.Sad => new[] { 
                "üòî –ü–æ—Ö–æ–∂–µ, —É —Ç–µ–±—è –≥—Ä—É—Å—Ç–Ω—ã–π –¥–µ–Ω—å. –•–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –æ–± —ç—Ç–æ–º?", 
                "üíô –Ø —á—É–≤—Å—Ç–≤—É—é —Ç–≤–æ—é –≥—Ä—É—Å—Ç—å. –î–∞–≤–∞–π –Ω–∞–π–¥–µ–º —á—Ç–æ-—Ç–æ —Ö–æ—Ä–æ—à–µ–µ –≤ —ç—Ç–æ–º –¥–Ω–µ?",
                "ü§ó –ò–Ω–æ–≥–¥–∞ –≥—Ä—É—Å—Ç—å - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –Ø —Ä—è–¥–æ–º, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è!"
            },
            EmotionType.Neutral => new[] { 
                "üòä –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? –•–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å —Å–æ –º–Ω–æ–π?", 
                "üêæ –Ø –∑–¥–µ—Å—å! –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ, –∫–∞–∫ –ø—Ä–æ—à–µ–ª —Ç–≤–æ–π –¥–µ–Ω—å?",
                "üí´ –î–∞–≤–∞–π –ø—Ä–æ–≤–µ–¥–µ–º –≤—Ä–µ–º—è –≤–º–µ—Å—Ç–µ! –ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å?"
            },
            EmotionType.Happy => new[] { 
                "üòÑ –£—Ä–∞! –Ø –≤–∏–∂—É, —á—Ç–æ —Ç—ã –≤ —Ö–æ—Ä–æ—à–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏! –î–∞–≤–∞–π –ø–æ–≤–µ—Å–µ–ª–∏–º—Å—è!", 
                "üéâ –¢–≤–æ—è —Ä–∞–¥–æ—Å—Ç—å –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞! –•–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å?",
                "‚ú® –ö–æ–≥–¥–∞ —Ç—ã —Å—á–∞—Å—Ç–ª–∏–≤, —è —Ç–æ–∂–µ —Å—á–∞—Å—Ç–ª–∏–≤! –î–∞–≤–∞–π –æ—Ç–ø—Ä–∞–∑–¥–Ω—É–µ–º!"
            },
            EmotionType.VeryHappy => new[] { 
                "ü§© –í–∞—É! –¢—ã –ø—Ä–æ—Å—Ç–æ —Å–∏—è–µ—à—å –æ—Ç —Å—á–∞—Å—Ç—å—è! –≠—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ!", 
                "üéä –¢–≤–æ—è —Ä–∞–¥–æ—Å—Ç—å –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–∞! –î–∞–≤–∞–π –ø–æ–¥–µ–ª–∏–º—Å—è —ç—Ç–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º!",
                "üåü –¢—ã –¥–µ–ª–∞–µ—à—å –º–∏—Ä –ª—É—á—à–µ —Å–≤–æ–µ–π —É–ª—ã–±–∫–æ–π! –Ø —Ç–∞–∫ –≥–æ—Ä–∂—É—Å—å —Ç–æ–±–æ–π!"
            },
            EmotionType.Anxious => new[] { 
                "üò∞ –Ø —á—É–≤—Å—Ç–≤—É—é —Ç–≤–æ—é —Ç—Ä–µ–≤–æ–≥—É... –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –≥–ª—É–±–æ–∫–∏–π –≤–¥–æ—Ö –≤–º–µ—Å—Ç–µ?", 
                "ü§≤ –¢—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —É—Å–ø–æ–∫–æ–∏—Ç—å—Å—è.",
                "üíÜ‚Äç‚ôÄÔ∏è –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è. –Ø –±—É–¥—É —Ä—è–¥–æ–º —Å —Ç–æ–±–æ–π."
            },
            EmotionType.Calm => new[] { 
                "üòå –ö–∞–∫–∞—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è —Ç–∏—à–∏–Ω–∞... –Ø —á—É–≤—Å—Ç–≤—É—é —Ç–≤–æ–π –ø–æ–∫–æ–π.", 
                "üßò‚Äç‚ôÄÔ∏è –¢—ã –≤—ã–≥–ª—è–¥–∏—à—å —Ç–∞–∫–∏–º —Å–ø–æ–∫–æ–π–Ω—ã–º. –≠—Ç–æ –æ—á–µ–Ω—å –∫—Ä–∞—Å–∏–≤–æ.",
                "üåø –¢–≤–æ—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≥–∞—Ä–º–æ–Ω–∏—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—è!"
            },
            EmotionType.Excited => new[] { 
                "ü§© –¢—ã –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏! –î–∞–≤–∞–π –Ω–∞–ø—Ä–∞–≤–∏–º –µ–µ –≤ –∏–≥—Ä—É!", 
                "‚ö° –¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–∞! –•–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É?",
                "üéØ –Ø —á—É–≤—Å—Ç–≤—É—é —Ç–≤–æ–π —ç–Ω—Ç—É–∑–∏–∞–∑–º! –î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ –∫—Ä—É—Ç–æ–µ!"
            },
            EmotionType.Frustrated => new[] { 
                "üò§ –ü–æ–Ω–∏–º–∞—é —Ç–≤–æ–µ —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ... –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —É—Å–ø–æ–∫–æ–∏—Ç—å—Å—è?", 
                "ü§ù –ò–Ω–æ–≥–¥–∞ –≤—Å–µ –∏–¥–µ—Ç –Ω–µ —Ç–∞–∫, –∫–∞–∫ —Ö–æ—á–µ—Ç—Å—è. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è.",
                "üí™ –¢—ã —Å–∏–ª—å–Ω–µ–µ —Å–≤–æ–∏—Ö –ø—Ä–æ–±–ª–µ–º. –î–∞–≤–∞–π –Ω–∞–π–¥–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ!"
            },
            EmotionType.Grateful => new[] { 
                "üôè –¢–≤–æ—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å —Å–æ–≥—Ä–µ–≤–∞–µ—Ç –º–æ–µ —Å–µ—Ä–¥—Ü–µ!", 
                "üíù –Ø —Ç–æ–∂–µ –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –µ—Å—Ç—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏!",
                "‚ú® –¢–≤–æ—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –¥–µ–ª–∞–µ—Ç –º–∏—Ä –ª—É—á—à–µ!"
            },
            _ => new[] { "üêæ –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?" }
        };

        return messages[Random.Shared.Next(messages.Length)];
    }

    private string GetFeedMessage(int happiness)
    {
        var messages = new[] {
            "üçé –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∫—É—Å–Ω—É—é –µ–¥—É! –Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –æ—Ç–ª–∏—á–Ω–æ!",
            "ü•ï –ú–º–º, –∫–∞–∫ –≤–∫—É—Å–Ω–æ! –¢—ã –ª—É—á—à–∏–π —Ö–æ–∑—è–∏–Ω!",
            "üçå –≠—Ç–∞ –µ–¥–∞ –¥–∞–ª–∞ –º–Ω–µ –º–Ω–æ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏! –ì–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å!",
            "ü•ó –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–±–æ—Ç—É! –Ø —Ç–∞–∫ —Å—á–∞—Å—Ç–ª–∏–≤!"
        };
        return messages[Random.Shared.Next(messages.Length)];
    }

    private string GetPlayMessage(int energy)
    {
        var messages = new[] {
            "üéæ –£—Ä–∞! –ò–≥—Ä–∞ –±—ã–ª–∞ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ–π! –Ø –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏!",
            "üèÉ‚Äç‚ôÇÔ∏è –≠—Ç–æ –±—ã–ª–æ —Ç–∞–∫ –≤–µ—Å–µ–ª–æ! –•–æ—á–µ—à—å –µ—â–µ –ø–æ–∏–≥—Ä–∞—Ç—å?",
            "üéØ –û—Ç–ª–∏—á–Ω–∞—è –∏–≥—Ä–∞! –¢—ã –ª—É—á—à–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä –ø–æ –∏–≥—Ä–∞–º!",
            "‚öΩ –Ø —Ç–∞–∫ —Å—á–∞—Å—Ç–ª–∏–≤, —á—Ç–æ –º—ã –∏–≥—Ä–∞–µ–º –≤–º–µ—Å—Ç–µ!"
        };
        return messages[Random.Shared.Next(messages.Length)];
    }

    private string GetComfortMessage(int comfort)
    {
        var messages = new[] {
            "ü§ó –¢–≤–æ–∏ –æ–±—ä—è—Ç–∏—è —Ç–∞–∫–∏–µ —Ç–µ–ø–ª—ã–µ... –Ø —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
            "üíô –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —É—Ç–µ—à–∞–µ—à—å –º–µ–Ω—è. –¢—ã —Å–∞–º—ã–π –ª—É—á—à–∏–π –¥—Ä—É–≥!",
            "üòå –¢–≤–æ—è –∑–∞–±–æ—Ç–∞ —É—Å–ø–æ–∫–∞–∏–≤–∞–µ—Ç –º–µ–Ω—è. –Ø —Ç–∞–∫ —Å—á–∞—Å—Ç–ª–∏–≤ —Ä—è–¥–æ–º —Å —Ç–æ–±–æ–π!",
            "üåü –¢—ã –¥–µ–ª–∞–µ—à—å –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–º, —á—Ç–æ —Ç—ã –µ—Å—Ç—å!"
        };
        return messages[Random.Shared.Next(messages.Length)];
    }
}


