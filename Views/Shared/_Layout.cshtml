<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Sofia.Web</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script type="importmap"></script>
    <script>
        // Enhanced theme system with smooth transitions
        (function() {
            const THEME_KEY = 'sofia.theme';
            const root = document.documentElement;

            function applyTheme(theme) {
                // Add transition for smooth theme change
                root.style.transition = 'background-color 0.3s ease, color 0.3s ease';

                if (theme === 'dark') {
                    root.classList.add('theme-dark');
                } else {
                    root.classList.remove('theme-dark');
                }

                // Update theme toggle button text
                const toggleBtn = document.querySelector('[data-theme-toggle]');
                if (toggleBtn) {
                    const icon = toggleBtn.querySelector('.theme-text');
                    if (icon) {
                        icon.textContent = theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
                    }
                }

                // Remove transition after animation
                setTimeout(() => {
                    root.style.transition = '';
                }, 300);
            }

            // Load saved theme
            const saved = localStorage.getItem(THEME_KEY);
            if (saved) {
                applyTheme(saved);
            } else {
                // Default to system preference
                const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                applyTheme(prefersDark ? 'dark' : 'light');
            }

            // Theme toggle handler
            document.addEventListener('click', function(e) {
                const toggleBtn = e.target.closest('[data-theme-toggle]');
                if (!toggleBtn) return;

                const isDark = root.classList.contains('theme-dark');
                const next = isDark ? 'light' : 'dark';

                applyTheme(next);
                localStorage.setItem(THEME_KEY, next);

                // Add a subtle animation feedback
                toggleBtn.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    toggleBtn.style.transform = '';
                }, 150);
            });

            // Listen for system theme changes
            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {
                // Only apply if user hasn't manually set a preference
                if (!localStorage.getItem(THEME_KEY)) {
                    applyTheme(e.matches ? 'dark' : 'light');
                }
            });
        })();
    </script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Sofia.Web.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <span style="font-size: 1.5rem;">üåü</span> Sofia
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                @if (Context.Session.GetString("UserRole") == "psychologist")
                {
                    <li class="nav-item"><a class="nav-link" href="/psychologist">–î–∞—à–±–æ—Ä–¥</a></li>
                    <li class="nav-item"><a class="nav-link" href="/settings">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</a></li>
                }
                else
                {
                    <li class="nav-item d-none d-md-block"><a class="nav-link" href="/home">–ì–ª–∞–≤–Ω–∞—è</a></li>
                    <li class="nav-item"><a class="nav-link" href="/notes">–ó–∞–º–µ—Ç–∫–∏</a></li>
                    <li class="nav-item d-none d-lg-block"><a class="nav-link" href="/calendar">–ö–∞–ª–µ–Ω–¥–∞—Ä—å</a></li>
                    <li class="nav-item"><a class="nav-link" href="/goals">–¶–µ–ª–∏</a></li>
                    <li class="nav-item d-none d-lg-block"><a class="nav-link" href="/stats">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</a></li>
                    <li class="nav-item d-none d-md-block"><a class="nav-link" href="/practices">–ü—Ä–∞–∫—Ç–∏–∫–∏</a></li>
                    <li class="nav-item d-none d-lg-block"><a class="nav-link" href="/psychologist">–ü—Å–∏—Ö–æ–ª–æ–≥</a></li>
                    <li class="nav-item d-none d-md-block"><a class="nav-link" href="/settings">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</a></li>
                }
            </ul>
                    <!-- Mobile Bottom Navigation -->
                    <nav class="mobile-nav d-md-none">
                        <a href="/notes" class="mobile-nav-item" title="–ó–∞–º–µ—Ç–∫–∏">
                            <span class="mobile-nav-icon">üìù</span>
                        </a>
                        <a href="/goals" class="mobile-nav-item" title="–¶–µ–ª–∏">
                            <span class="mobile-nav-icon">üéØ</span>
                        </a>
                        <a href="/stats" class="mobile-nav-item" title="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞">
                            <span class="mobile-nav-icon">üìä</span>
                        </a>
                        <a href="/settings" class="mobile-nav-item" title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏">
                            <span class="mobile-nav-icon">‚öôÔ∏è</span>
                        </a>
                    </nav>
                    <div class="ms-auto d-flex align-items-center gap-2">
                        <button class="btn btn-outline-secondary btn-sm theme-toggle" data-theme-toggle title="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É">
                            <span class="theme-text">üåô</span>
                        </button>
                        @if (Context.Session.GetString("UserId") != null)
                        {
                            <span class="text-muted me-2">–ü—Ä–∏–≤–µ—Ç, @Context.Session.GetString("Username")!</span>
                            <form asp-controller="Auth" asp-action="Logout" method="post" class="d-inline">
                                <button type="submit" class="btn btn-outline-secondary btn-sm">–í—ã–π—Ç–∏</button>
                            </form>
                        }
                        else
                        {
                            <a href="/auth/login" class="btn btn-outline-primary btn-sm me-2">–í–æ–π—Ç–∏</a>
                            <a href="/auth/register" class="btn btn-primary btn-sm">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - Sofia.Web - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            line-height: 1.6;
        }

        .navbar {
            background: linear-gradient(135deg, #6b7cff 0%, #9c88ff 100%);
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .navbar-brand {
            font-weight: bold;
            font-size: 1.5rem;
        }

        .nav-link {
            color: rgba(255,255,255,0.9) !important;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .nav-link:hover {
            color: white !important;
            transform: translateY(-1px);
        }

        .main-content {
            min-height: calc(100vh - 200px);
            padding: 2rem 0;
        }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .btn {
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .btn:hover {
            transform: translateY(-1px);
        }

        .form-control, .form-select {
            border-radius: 8px;
            border: 1px solid #dee2e6;
            padding: 0.75rem 1rem;
        }

        .form-control:focus, .form-select:focus {
            border-color: #6b7cff;
            box-shadow: 0 0 0 0.2rem rgba(107, 124, 255, 0.25);
        }

        .container-fluid {
            max-width: 1400px;
            padding-left: 1rem;
            padding-right: 1rem;
        }

        .row {
            margin-left: -0.5rem;
            margin-right: -0.5rem;
        }

        .row > * {
            padding-left: 0.5rem;
            padding-right: 0.5rem;
        }

        /* –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */
        .mobile-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: white;
            border-top: 1px solid #dee2e6;
            display: flex;
            justify-content: space-around;
            padding: 0.5rem 0;
            z-index: 1000;
        }

        .mobile-nav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-decoration: none;
            color: #6c757d;
            padding: 0.5rem;
            transition: all 0.2s ease;
        }

        .mobile-nav-item:hover {
            color: #6b7cff;
            transform: translateY(-2px);
        }

        .mobile-nav-icon {
            font-size: 1.5rem;
            margin-bottom: 0.25rem;
        }

        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @@media (max-width: 768px) {
            .main-content {
                padding: 1rem 0;
                margin-bottom: 80px; /* –û—Ç—Å—Ç—É–ø –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
            }

            .container-fluid {
                padding-left: 0.5rem;
                padding-right: 0.5rem;
            }

            .card {
                margin-bottom: 1rem;
            }

            .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .d-flex.gap-2 {
                flex-direction: column;
            }

            .d-flex.gap-2 .btn {
                margin-bottom: 0.5rem;
            }
        }

        @@media (max-width: 576px) {
            .h2 {
                font-size: 1.5rem;
            }

            .h3 {
                font-size: 1.25rem;
            }

            .h4 {
                font-size: 1.1rem;
            }

            .card-body {
                padding: 1rem;
            }

            .table-responsive {
                font-size: 0.875rem;
            }
        }

        /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω */
        .modal-content {
            border-radius: 12px;
            border: none;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        }

        .modal-header {
            border-bottom: 1px solid #dee2e6;
            padding: 1.5rem;
        }

        .modal-body {
            padding: 1.5rem;
        }

        .modal-footer {
            border-top: 1px solid #dee2e6;
            padding: 1rem 1.5rem;
        }

        /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Ç–∞–±–ª–∏—Ü */
        .table {
            margin-bottom: 0;
        }

        .table th {
            border-top: none;
            font-weight: 600;
            color: #495057;
            background-color: #f8f9fa;
        }

        .table td {
            vertical-align: middle;
        }

        /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ */
        .list-group-item {
            border-radius: 8px;
            margin-bottom: 0.5rem;
            border: 1px solid #dee2e6;
        }

        .list-group-item:first-child {
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
        }

        .list-group-item:last-child {
            border-bottom-left-radius: 8px;
            border-bottom-right-radius: 8px;
        }

        /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –±–µ–π–¥–∂–µ–π */
        .badge {
            font-size: 0.75rem;
            padding: 0.5rem 0.75rem;
            border-radius: 6px;
        }

        /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.5s ease-out;
        }

        /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º */
        .form-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .form-check-label {
            font-weight: 500;
        }

        /* –£–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –∞–ª–µ—Ä—Ç–æ–≤ */
        .alert {
            border-radius: 8px;
            border: none;
            padding: 1rem 1.25rem;
        }

        .alert-info {
            background-color: #d1ecf1;
            color: #0c5460;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
        }

        .alert-warning {
            background-color: #fff3cd;
            color: #856404;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
        }
    </style>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
