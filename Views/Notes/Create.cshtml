@model Sofia.Web.Models.Note
@{
    ViewData["Title"] = "–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4 class="mb-0">üìù –ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞</h4>
            </div>
            <div class="card-body">
                <form method="post">
                    <div class="mb-3">
                        <label asp-for="Content" class="form-label">–¢–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏ *</label>
                        <textarea asp-for="Content" class="form-control" rows="6" placeholder="–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –º—ã—Å–ª–∏, —á—É–≤—Å—Ç–≤–∞, —Å–æ–±—ã—Ç–∏—è –¥–Ω—è..."></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Emotion" class="form-label">–≠–º–æ—Ü–∏—è</label>
                                <div class="emotion-picker" id="emotion-picker">
                                    <button type="button" class="emotion-btn active" data-emotion="@Sofia.Web.Models.EmotionType.Neutral" data-icon="üòê" title="–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ">
                                        <span class="emotion-icon">üòê</span>
                                        <span class="emotion-label">–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.VeryHappy" data-icon="üòÑ" title="–û—á–µ–Ω—å —Ä–∞–¥–æ—Å—Ç–Ω–æ">
                                        <span class="emotion-icon">üòÑ</span>
                                        <span class="emotion-label">–û—á–µ–Ω—å —Ä–∞–¥–æ—Å—Ç–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.Happy" data-icon="üòä" title="–†–∞–¥–æ—Å—Ç–Ω–æ">
                                        <span class="emotion-icon">üòä</span>
                                        <span class="emotion-label">–†–∞–¥–æ—Å—Ç–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.Calm" data-icon="üòå" title="–°–ø–æ–∫–æ–π–Ω–æ">
                                        <span class="emotion-icon">üòå</span>
                                        <span class="emotion-label">–°–ø–æ–∫–æ–π–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.Grateful" data-icon="üôè" title="–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ">
                                        <span class="emotion-icon">üôè</span>
                                        <span class="emotion-label">–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.Excited" data-icon="ü§©" title="–í–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω–æ">
                                        <span class="emotion-icon">ü§©</span>
                                        <span class="emotion-label">–í–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.Sad" data-icon="üòî" title="–ì—Ä—É—Å—Ç–Ω–æ">
                                        <span class="emotion-icon">üòî</span>
                                        <span class="emotion-label">–ì—Ä—É—Å—Ç–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.VerySad" data-icon="üò¢" title="–û—á–µ–Ω—å –≥—Ä—É—Å—Ç–Ω–æ">
                                        <span class="emotion-icon">üò¢</span>
                                        <span class="emotion-label">–û—á–µ–Ω—å –≥—Ä—É—Å—Ç–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.Anxious" data-icon="üò∞" title="–¢—Ä–µ–≤–æ–∂–Ω–æ">
                                        <span class="emotion-icon">üò∞</span>
                                        <span class="emotion-label">–¢—Ä–µ–≤–æ–∂–Ω–æ</span>
                                    </button>
                                    <button type="button" class="emotion-btn" data-emotion="@Sofia.Web.Models.EmotionType.Frustrated" data-icon="üò§" title="–†–∞–∑–¥—Ä–∞–∂—ë–Ω–Ω–æ">
                                        <span class="emotion-icon">üò§</span>
                                        <span class="emotion-label">–†–∞–∑–¥—Ä–∞–∂—ë–Ω–Ω–æ</span>
                                    </button>
                                </div>
                                <select asp-for="Emotion" class="form-select d-none">
                                    <option value="@Sofia.Web.Models.EmotionType.Neutral">üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.VeryHappy">üòÑ –û—á–µ–Ω—å —Ä–∞–¥–æ—Å—Ç–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.Happy">üòä –†–∞–¥–æ—Å—Ç–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.Calm">üòå –°–ø–æ–∫–æ–π–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.Grateful">üôè –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.Excited">ü§© –í–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.Sad">üòî –ì—Ä—É—Å—Ç–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.VerySad">üò¢ –û—á–µ–Ω—å –≥—Ä—É—Å—Ç–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.Anxious">üò∞ –¢—Ä–µ–≤–æ–∂–Ω–æ</option>
                                    <option value="@Sofia.Web.Models.EmotionType.Frustrated">üò§ –†–∞–∑–¥—Ä–∞–∂—ë–Ω–Ω–æ</option>
                                </select>
@section Scripts {
    <script>
        // Enhanced note creation with emotion picker and auto-save
        document.addEventListener('DOMContentLoaded', function() {
            const emotionPicker = document.getElementById('emotion-picker');
            const emotionSelect = document.querySelector('[asp-for="Emotion"]');
            const contentTextarea = document.querySelector('[asp-for="Content"]');
            const form = document.querySelector('form');
            const charCounter = document.createElement('div');
            let autoSaveTimeout;

            // Initialize emotion picker
            emotionPicker.addEventListener('click', function(e) {
                const btn = e.target.closest('.emotion-btn');
                if (!btn) return;

                // Remove active class from all buttons
                emotionPicker.querySelectorAll('.emotion-btn').forEach(b => b.classList.remove('active'));
                // Add active class to clicked button
                btn.classList.add('active');

                // Update hidden select
                const emotionValue = btn.dataset.emotion;
                emotionSelect.value = emotionValue;

                // Add bounce animation
                btn.style.animation = 'bounce 0.5s ease';
                setTimeout(() => btn.style.animation = '', 500);
            });

            // Set initial active emotion
            const initialEmotion = emotionSelect.value;
            if (initialEmotion) {
                const initialBtn = emotionPicker.querySelector(`[data-emotion="${initialEmotion}"]`);
                if (initialBtn) {
                    initialBtn.classList.add('active');
                }
            }

            // Character counter
            charCounter.className = 'form-text mt-1';
            charCounter.style.fontSize = '0.8rem';
            contentTextarea.parentNode.appendChild(charCounter);

            function updateCharCount() {
                const current = contentTextarea.value.length;
                const max = 2000;
                charCounter.textContent = `${current}/${max} —Å–∏–º–≤–æ–ª–æ–≤`;
                charCounter.style.color = current > max * 0.9 ? 'var(--color-danger)' : 'var(--color-muted)';
            }

            contentTextarea.addEventListener('input', updateCharCount);
            updateCharCount();

            // Auto-save functionality
            function autoSave() {
                const data = {
                    content: contentTextarea.value,
                    emotion: emotionSelect.value,
                    activity: document.querySelector('[asp-for="Activity"]').value,
                    tags: document.querySelector('[asp-for="Tags"]').value,
                    isPinned: document.querySelector('[asp-for="IsPinned"]').checked,
                    shareWithPsychologist: document.querySelector('[asp-for="ShareWithPsychologist"]').checked,
                    timestamp: new Date().toISOString()
                };

                if (data.content.trim()) {
                    localStorage.setItem('note-draft', JSON.stringify(data));
                    showSaveIndicator();
                }
            }

            function showSaveIndicator() {
                const indicator = document.createElement('div');
                indicator.textContent = 'üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ';
                indicator.style.cssText = `
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    background: var(--color-success);
                    color: white;
                    padding: 8px 16px;
                    border-radius: var(--radius);
                    font-size: 0.9rem;
                    z-index: 1000;
                    animation: fadeInOut 2s ease;
                `;

                document.body.appendChild(indicator);
                setTimeout(() => indicator.remove(), 2000);
            }

            function loadDraft() {
                const draftData = localStorage.getItem('note-draft');
                if (!draftData) return;

                try {
                    const draft = JSON.parse(draftData);
                    const draftDate = new Date(draft.timestamp);
                    const hoursDiff = (new Date() - draftDate) / (1000 * 60 * 60);

                    if (hoursDiff < 24) {
                        contentTextarea.value = draft.content || '';
                        emotionSelect.value = draft.emotion || 'Neutral';
                        document.querySelector('[asp-for="Activity"]').value = draft.activity || '';
                        document.querySelector('[asp-for="Tags"]').value = draft.tags || '';
                        document.querySelector('[asp-for="IsPinned"]').checked = draft.isPinned || false;
                        document.querySelector('[asp-for="ShareWithPsychologist"]').checked = draft.shareWithPsychologist || false;

                        // Update emotion picker UI
                        emotionPicker.querySelectorAll('.emotion-btn').forEach(btn => {
                            btn.classList.toggle('active', btn.dataset.emotion === draft.emotion);
                        });

                        updateCharCount();
                        console.log('Draft loaded');
                    }
                } catch (e) {
                    console.error('Error loading draft:', e);
                }
            }

            // Load draft on page load
            loadDraft();

            // Auto-save on input
            [contentTextarea, emotionSelect, ...document.querySelectorAll('input, textarea')].forEach(el => {
                el.addEventListener('input', function() {
                    clearTimeout(autoSaveTimeout);
                    autoSaveTimeout = setTimeout(autoSave, 1000);
                });
            });

            // Clear draft on successful submit
            form.addEventListener('submit', function() {
                localStorage.removeItem('note-draft');
            });
        });
    </script>
}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Activity" class="form-label">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</label>
                                <input asp-for="Activity" class="form-control" placeholder="–†–∞–±–æ—Ç–∞, —É—á—ë–±–∞, –æ—Ç–¥—ã—Ö, —Å–ø–æ—Ä—Ç..." />
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Tags" class="form-label">–¢–µ–≥–∏</label>
                        <input asp-for="Tags" class="form-control" placeholder="—Ç—Ä–µ–≤–æ–≥–∞, —Ä–∞–±–æ—Ç–∞, —Å–µ–º—å—è (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)" />
                        <div class="form-text">–¢–µ–≥–∏ –ø–æ–º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –∑–∞–º–µ—Ç–∫–∏ –ø–æ —Ç–µ–º–∞–º</div>
                    </div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input asp-for="IsPinned" class="form-check-input" />
                            <label asp-for="IsPinned" class="form-check-label">
                                üìå –ó–∞–∫—Ä–µ–ø–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
                            </label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input asp-for="ShareWithPsychologist" class="form-check-input" />
                            <label asp-for="ShareWithPsychologist" class="form-check-label">
                                üë• –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º
                            </label>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="/notes" class="btn btn-secondary">–û—Ç–º–µ–Ω–∞</a>
                        <button type="submit" class="btn btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
