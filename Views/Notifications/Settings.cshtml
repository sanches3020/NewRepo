@{
    ViewData["Title"] = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π";
    var settings = ViewBag.Settings as Sofia.Web.Models.NotificationSettings;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h2>
    <a href="/notifications" class="btn btn-outline-secondary">‚Üê –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</a>
</div>

<div class="row g-4">
    <!-- Notification Settings -->
    <div class="col-lg-8">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h5>
            </div>
            <div class="card-body">
                <form id="notificationSettingsForm">
                    <div class="row g-3">
                        <!-- Daily Reminder -->
                        <div class="col-md-6">
                            <div class="setting-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1">üìù –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</h6>
                                        <small class="text-muted">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫</small>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="dailyReminder" 
                                               @(settings?.DailyReminder == true ? "checked" : "")>
                                    </div>
                                </div>
                                <div class="mt-2">
                                    <label for="dailyReminderTime" class="form-label small">–í—Ä–µ–º—è:</label>
                                    <input type="time" class="form-control form-control-sm" id="dailyReminderTime" 
                                           value="@(settings?.DailyReminderTime.ToString(@"hh\:mm") ?? "20:00")">
                                </div>
                            </div>
                        </div>

                        <!-- Mood Check -->
                        <div class="col-md-6">
                            <div class="setting-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1">üòä –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</h6>
                                        <small class="text-muted">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–ø–∏—Å–∏ —ç–º–æ—Ü–∏–π</small>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="moodCheckReminder" 
                                               @(settings?.MoodCheckReminder == true ? "checked" : "")>
                                    </div>
                                </div>
                                <div class="mt-2">
                                    <label for="moodCheckTime" class="form-label small">–í—Ä–µ–º—è:</label>
                                    <input type="time" class="form-control form-control-sm" id="moodCheckTime" 
                                           value="@(settings?.MoodCheckTime.ToString(@"hh\:mm") ?? "19:00")">
                                </div>
                            </div>
                        </div>

                        <!-- Goal Reminder -->
                        <div class="col-md-6">
                            <div class="setting-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1">üéØ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ü–µ–ª—è—Ö</h6>
                                        <small class="text-muted">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ä–∞–±–æ—Ç–µ –Ω–∞–¥ —Ü–µ–ª—è–º–∏</small>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="goalReminder" 
                                               @(settings?.GoalReminder == true ? "checked" : "")>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Practice Reminder -->
                        <div class="col-md-6">
                            <div class="setting-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1">üßò –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö</h6>
                                        <small class="text-muted">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏</small>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="practiceReminder" 
                                               @(settings?.PracticeReminder == true ? "checked" : "")>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Weekly Report -->
                        <div class="col-md-6">
                            <div class="setting-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1">üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã</h6>
                                        <small class="text-muted">–û—Ç—á–µ—Ç—ã –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –∑–∞ –Ω–µ–¥–µ–ª—é</small>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="weeklyReport" 
                                               @(settings?.WeeklyReport == true ? "checked" : "")>
                                    </div>
                                </div>
                                <div class="mt-2">
                                    <label for="weeklyReportDay" class="form-label small">–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏:</label>
                                    <select class="form-select form-select-sm" id="weeklyReportDay">
                                        <option value="Monday">–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫</option>
                                        <option value="Tuesday">–í—Ç–æ—Ä–Ω–∏–∫</option>
                                        <option value="Wednesday">–°—Ä–µ–¥–∞</option>
                                        <option value="Thursday">–ß–µ—Ç–≤–µ—Ä–≥</option>
                                        <option value="Friday">–ü—è—Ç–Ω–∏—Ü–∞</option>
                                        <option value="Saturday">–°—É–±–±–æ—Ç–∞</option>
                                        <option value="Sunday">–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <!-- Psychologist Reminder -->
                        <div class="col-md-6">
                            <div class="setting-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1">üë• –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Å–∏—Ö–æ–ª–æ–≥–µ</h6>
                                        <small class="text-muted">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–ø–∏—Å—è—Ö –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É</small>
                                    </div>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="psychologistReminder" 
                                               @(settings?.PsychologistReminder == true ? "checked" : "")>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Notification Channels -->
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">üì± –ö–∞–Ω–∞–ª—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="setting-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">üîî Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h6>
                                    <small class="text-muted">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ</small>
                                </div>
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="pushNotifications" 
                                           @(settings?.PushNotifications == true ? "checked" : "")>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="setting-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h6>
                                    <small class="text-muted">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –ø–æ—á—Ç—É</small>
                                </div>
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="emailNotifications" 
                                           @(settings?.EmailNotifications == true ? "checked" : "")>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Settings Info -->
    <div class="col-lg-4">
        <!-- Current Settings Summary -->
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h6>
            </div>
            <div class="card-body">
                <div class="settings-summary">
                    <div class="setting-summary-item">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</span>
                            <span class="badge @(settings?.DailyReminder == true ? "bg-success" : "bg-secondary")">
                                @(settings?.DailyReminder == true ? "–í–∫–ª—é—á–µ–Ω–æ" : "–í—ã–∫–ª—é—á–µ–Ω–æ")
                            </span>
                        </div>
                        @if (settings?.DailyReminder == true)
                        {
                            <small class="text-muted">@settings.DailyReminderTime.ToString(@"hh\:mm")</small>
                        }
                    </div>
                    
                    <div class="setting-summary-item">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</span>
                            <span class="badge @(settings?.MoodCheckReminder == true ? "bg-success" : "bg-secondary")">
                                @(settings?.MoodCheckReminder == true ? "–í–∫–ª—é—á–µ–Ω–æ" : "–í—ã–∫–ª—é—á–µ–Ω–æ")
                            </span>
                        </div>
                        @if (settings?.MoodCheckReminder == true)
                        {
                            <small class="text-muted">@settings.MoodCheckTime.ToString(@"hh\:mm")</small>
                        }
                    </div>
                    
                    <div class="setting-summary-item">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ü–µ–ª—è—Ö</span>
                            <span class="badge @(settings?.GoalReminder == true ? "bg-success" : "bg-secondary")">
                                @(settings?.GoalReminder == true ? "–í–∫–ª—é—á–µ–Ω–æ" : "–í—ã–∫–ª—é—á–µ–Ω–æ")
                            </span>
                        </div>
                    </div>
                    
                    <div class="setting-summary-item">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
                            <span class="badge @(settings?.PushNotifications == true ? "bg-success" : "bg-secondary")">
                                @(settings?.PushNotifications == true ? "–í–∫–ª—é—á–µ–Ω–æ" : "–í—ã–∫–ª—é—á–µ–Ω–æ")
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Notification Tips -->
        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">üí° –°–æ–≤–µ—Ç—ã</h6>
            </div>
            <div class="card-body">
                <div class="tips-list">
                    <div class="tip-item">
                        <div class="tip-icon">‚è∞</div>
                        <div class="tip-text">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π</div>
                    </div>
                    <div class="tip-item">
                        <div class="tip-icon">üéØ</div>
                        <div class="tip-text">–í–∫–ª—é—á–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ü–µ–ª—è—Ö –¥–ª—è –ª—É—á—à–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</div>
                    </div>
                    <div class="tip-item">
                        <div class="tip-icon">üòä</div>
                        <div class="tip-text">–†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —ç–º–æ—Ü–∏–∏</div>
                    </div>
                    <div class="tip-item">
                        <div class="tip-icon">üîî</div>
                        <div class="tip-text">Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–æ–º —Å–∞–π—Ç–µ</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button class="btn btn-outline-primary btn-sm" onclick="saveSettings()">
                        üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    </button>
                    <button class="btn btn-outline-success btn-sm" onclick="testNotification()">
                        üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    </button>
                    <button class="btn btn-outline-info btn-sm" onclick="requestPermission()">
                        üîî –†–∞–∑—Ä–µ—à–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                    </button>
                    <a href="/notifications" class="btn btn-outline-secondary btn-sm">
                        üì¨ –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.setting-item {
    padding: 15px;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    transition: all 0.2s ease;
}

.setting-item:hover {
    background: #f8f9fa;
    border-color: #6b7cff;
}

.settings-summary {
    space-y: 15px;
}

.setting-summary-item {
    padding: 8px 0;
    border-bottom: 1px solid #f3f4f6;
}

.setting-summary-item:last-child {
    border-bottom: none;
}

.tips-list {
    space-y: 15px;
}

.tip-item {
    display: flex;
    align-items: flex-start;
    gap: 10px;
    padding: 10px 0;
}

.tip-icon {
    font-size: 20px;
    flex-shrink: 0;
}

.tip-text {
    font-size: 14px;
    color: #666;
    line-height: 1.4;
}

.card {
    transition: transform 0.2s ease;
}

.card:hover {
    transform: translateY(-2px);
}
</style>

<script>
function saveSettings() {
    const form = document.getElementById('notificationSettingsForm');
    const formData = new FormData(form);
    
    const data = {
        dailyReminder: document.getElementById('dailyReminder').checked,
        dailyReminderTime: document.getElementById('dailyReminderTime').value,
        goalReminder: document.getElementById('goalReminder').checked,
        moodCheckReminder: document.getElementById('moodCheckReminder').checked,
        moodCheckTime: document.getElementById('moodCheckTime').value,
        weeklyReport: document.getElementById('weeklyReport').checked,
        weeklyReportDay: document.getElementById('weeklyReportDay').value,
        practiceReminder: document.getElementById('practiceReminder').checked,
        psychologistReminder: document.getElementById('psychologistReminder').checked,
        emailNotifications: document.getElementById('emailNotifications').checked,
        pushNotifications: document.getElementById('pushNotifications').checked
    };
    
    fetch('/notifications/settings', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            showToast(result.message, 'success');
            setTimeout(() => location.reload(), 1000);
        } else {
            showToast('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'error');
        }
    });
}

function testNotification() {
    if ('Notification' in window) {
        if (Notification.permission === 'granted') {
            new Notification('üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', {
                body: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç Sofia!',
                icon: '/favicon.ico'
            });
            showToast('–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success');
        } else if (Notification.permission !== 'denied') {
            Notification.requestPermission().then(permission => {
                if (permission === 'granted') {
                    new Notification('üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', {
                        body: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç Sofia!',
                        icon: '/favicon.ico'
                    });
                    showToast('–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success');
                } else {
                    showToast('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ', 'warning');
                }
            });
        } else {
            showToast('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ', 'warning');
        }
    } else {
        showToast('–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'warning');
    }
}

function requestPermission() {
    if ('Notification' in window) {
        Notification.requestPermission().then(permission => {
            if (permission === 'granted') {
                showToast('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–æ!', 'success');
            } else {
                showToast('–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ', 'warning');
            }
        });
    } else {
        showToast('–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 'warning');
    }
}

function showToast(message, type) {
    const toast = document.createElement('div');
    toast.className = 'toast-notification';
    toast.textContent = message;
    
    const colors = {
        success: '#10b981',
        error: '#ef4444',
        info: '#3b82f6',
        warning: '#f59e0b'
    };
    
    toast.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${colors[type]};
        color: white;
        padding: 12px 20px;
        border-radius: 6px;
        z-index: 1000;
        animation: slideIn 0.3s ease;
    `;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
        toast.remove();
    }, 3000);
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
document.addEventListener('DOMContentLoaded', function() {
    const inputs = document.querySelectorAll('input[type="checkbox"], input[type="time"], select');
    inputs.forEach(input => {
        input.addEventListener('change', function() {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏–∑–º–µ–Ω–µ–Ω–∏—è
            const settingItem = this.closest('.setting-item');
            if (settingItem) {
                settingItem.style.background = '#f0f9ff';
                settingItem.style.borderColor = '#3b82f6';
            }
        });
    });
});
</script>
